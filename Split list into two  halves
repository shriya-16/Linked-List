#include <bits/stdc++.h>
using namespace std;

class Node{
    public:
    int data;
    Node* next;
};

void splitList(Node* head, Node** head1, Node** head2){
    Node *slow_ptr = head, *fast_ptr = head;
    
    if(head == NULL)
        return;
    
    while(fast_ptr->next != head && fast_ptr->next->next != head){
        fast_ptr = fast_ptr->next->next;
        slow_ptr = slow_ptr->next;
    }
    
    if(fast_ptr->next->next == head)
        fast_ptr = fast_ptr->next;
        
    *head1 = head;
    if(head->next != head)
        *head2 = slow_ptr->next;
    slow_ptr->next = *head1;
    fast_ptr->next = *head2;
}

void push(Node** head, int new_data){
    Node* temp = new Node();
    temp->data = new_data;
    temp->next = (*head);
    Node* curr = (*head);
    
    if((*head) != NULL){
        while(curr->next != (*head))
            curr = curr->next;
        curr->next = temp;
    }
    else
        temp->next = temp;
    (*head) = temp;
}

void printList(Node* head){
    Node* curr = head;
    if(head){
        do{
            cout << curr->data << " ";
            curr = curr->next;
        }while(curr != head);
    }
    cout << endl;
}

int main() {
    Node* head = NULL, *head1 = NULL, *head2 = NULL;
    push(&head, 1);
    push(&head, 2);
    push(&head, 3);
    push(&head, 4);
    push(&head, 5);
    printList(head);
    splitList(head, &head1, &head2);
    printList(head1);
    printList(head2);
    return 0;
}
