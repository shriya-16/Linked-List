
#include <iostream>
using namespace std;

class Node{
    public:
    int val;
    Node* next;
};

void append(Node** head, int val){
    Node* newNode = new Node();
    newNode->val = val;
    newNode->next = NULL;
    Node* temp1 = (*head);
    while(temp1->next != NULL)
        temp1 = temp1->next;
    temp1->next = newNode;
}

void printList(Node** head){                  
    Node *temp = (*head);
    while(temp != NULL){
        cout << temp->val << " ";
        temp = temp->next;
    }
    cout << "\n";
}

Node* pairWiseSwap(Node** head){
    if((*head) == NULL || (*head)->next == NULL)  return (*head);
    Node* curr = (*head)->next->next;
    Node* prev = (*head);
    (*head)->next->next = prev;
    (*head) = prev->next;
    while(curr != NULL && curr->next != NULL){
        prev->next = curr->next;
        Node* next = curr->next->next;
        curr->next->next = curr;
        prev = curr;
        curr = next;
    }
    prev->next = curr;
    return (*head);
}

int main(){
    Node *head = new Node();  
    head->val = 1;
    head->next = NULL;
    append(&head, 2);
    append(&head, 3);
    append(&head, 4);
    append(&head, 5);
    append(&head, 6);
    printList(&head);      
    head = pairWiseSwap(&head);
    printList(&head);
    return 0;
}
