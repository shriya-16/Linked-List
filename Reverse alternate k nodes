#include <iostream>
using namespace std;

class Node{
    public:
    int val;
    Node* next;
};

void append(Node** head, int new_val){
    Node* new_node = new Node();
    new_node->val = new_val;
    Node* temp = (*head);
    while(temp->next != NULL)
        temp = temp->next;
    temp->next = new_node;
}

void printList(Node** head){
    Node* temp = (*head);
    while(temp != NULL){
        cout << temp->val << " ";
        temp = temp->next;
    }
    cout << endl;
}

Node* kaltrev(Node **head, int k){
    if((*head) == NULL)
        return (*head);
    Node *curr = (*head), *prev = NULL, *next = NULL;
    int count = 0;
    while(count < k && curr != NULL){
        next = curr->next;
        curr->next = prev;
        prev = curr;
        curr = next;
        count++;
    }
    count = 0;
    (*head)->next = curr;
    while(count < k-1 && curr != NULL){
        curr = curr->next;
        count++;
    }
    
    if(curr != NULL)
        curr->next = kaltrev(&(curr->next), k);
    return prev;
}

int main() {
    Node* head = new Node();
    head->val = 1;
    head->next = NULL;
    for(int i = 2; i < 10; i++)
        append(&head, i);
    head = kaltrev(&head, 3);
    printList(&head);
    return 0;
}
